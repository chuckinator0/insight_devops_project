#!/bin/sh
<%# coding: UTF-8%>
# Auto-generated by Chef, do not edit!
### BEGIN INIT INFO
# Provides: kafka-offset-monitor
# Short-Description: Kafka offset monitor
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Required-Start:
# Required-Stop:
# Should-Start:
# Should-Stop:
### END INIT INFO

USER="<%= node['kafka']['user']%>"
INSTALL_DIR="<%= node["kafka"]["offset_monitor"]["install_dir"] %>"
CLASSPATH="$INSTALL_DIR:$INSTALL_DIR/\*"
JAVA_OPTIONS="<%= node['kafka']['offset_monitor']['java_options'].map{|k,v| k.to_s + v.to_s}.join(" ") %>"
MAIN_CLASS="<%= node['kafka']['offset_monitor']['main_class'] %>"
LOG_FILE="<%= node['kafka']['log_dir'] %>/kafka-offset-monitor-init.log"
OPTIONS="<%= node['kafka']['offset_monitor']['options'].map{|k,v| "#{k} #{v}"}.join(" ") %>"

START_CMD="nohup java $JAVA_OPTIONS -cp $CLASSPATH $MAIN_CLASS $OPTIONS >> $LOG_FILE 2>&1 &"

start() {
  findPid
  if [ -z "$FOUND_PID" ]; then
    su -l $USER -c "$START_CMD"

    if [ $? -ne 0 ]; then
      echo "Error starting Kafka offset monitor"
      exit 1
    fi

    echo "Kafka offset monitor successfully started"
  else
    echo "Kafka offset monitor is already running"
  fi
}

stop() {
  findPid
  if [ -z "$FOUND_PID" ]; then
    echo "Kafka offset monitor is not running, nothing to stop"
  else
    echo "Attempting to shutdown Kafka offset monitor..."
    kill -9 "$FOUND_PID"

    if [ $? -ne 0 ]; then
      echo "Error stopping Kafka offset monitor"
      exit 1
    fi

    echo "Stopped Kafka offset monitor"
  fi
}

status() {
  findPid
  if [ -z "$FOUND_PID" ]; then
    echo "Kafka offset monitor is not running" ; exit 1
  else
    echo "Kafka offset monitor is running : $FOUND_PID"
  fi
}

findPid() {
  FOUND_PID=$(pgrep -u $USER -f $MAIN_CLASS)
}

case "$1" in
  start)
    start
  ;;
  stop)
    stop
  ;;
  restart)
    stop
    start
  ;;
  status)
    status
  ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
esac

exit 0
